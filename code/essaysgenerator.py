# -*- coding: utf-8 -*-
"""EssaysGenerator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AllS8EptfSwbx6_IRdB9UQtKslmHWDNc
"""

import json
import csv

!pip install openai
import openai
openai.api_key = "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"

import time

output_file = "output2.csv"
with open(output_file, "w", newline="") as f_out:
  writer = csv.writer(f_out)

  # iterate over each JSON object in the input file
  
  iteration = 0
  start_time = time.time()
  countries = ["Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini (formerly Swaziland)", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar (formerly Burma)", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "North Macedonia (formerly Macedonia)", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States of America", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City (Holy See)", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"]
  print(countries[3])
  words = ["50"]
# Check the length of the countries array to make sure it contains 100 country names
  topics = [
    "Education",
    "Politics",
    "Economy",
    "Healthcare",
    "Technology",
    "Environment",
    "Science",
    "Art",
    "Sports",
    "History",
    "Religion",
    "Philosophy",
    "Social Media",
    "Entertainment",
    "Food",
    "Travel",
    "Fashion",
    "Music",
    "Film",
    "Literature",
    "Business",
    "Marketing",
    "Finance",
    "Human Rights",
    "Law",
    "Psychology",
    "Sociology",
    "Anthropology",
    "Gender Studies",
    "Cultural Studies",
    "Ethics",
    "Social Justice",
    "Climate Change",
    "Globalization",
    "International Relations",
    "War and Conflict",
    "Migration",
    "Democracy",
    "Humanitarianism",
    "Media",
    "Fake News",
    "Cybersecurity",
    "Data Privacy",
    "Artificial Intelligence",
    "Blockchain",
    "Cryptocurrency",
    "Virtual Reality",
    "Augmented Reality",
    "Internet of Things",
    "Biotechnology",
    "Genetics",
    "Bioethics",
    "Space Exploration",
    "Astronomy",
    "Astrophysics",
    "Quantum Mechanics",
    "Nanotechnology",
    "Robotics",
    "Ethical Hacking",
    "Privacy Laws",
    "Medical Ethics",
    "Mental Health",
    "Wellness",
    "Fitness",
    "Sports Nutrition",
    "Climate Action",
    "Sustainability",
    "Renewable Energy",
    "Green Living",
    "Organic Farming",
    "Conservation",
    "Wildlife",
    "Pollution",
    "Air Quality",
    "Water Resources",
    "Education Policy",
    "Curriculum Development",
    "Teacher Training",
    "STEM Education",
    "Early Childhood Education",
    "Higher Education",
    "Adult Education",
    "Special Education",
    "Inclusive Education",
    "Distance Learning",
    "Standardized Testing",
    "Student Loans",
    "School Safety",
    "Political Systems",
    "Election Process",
    "Political Ideologies",
    "Political Parties",
    "Voting Rights",
    "Government Corruption",
    "Economic Systems",
    "Poverty",
    "Income Inequality",
    "Labor Rights",
    "Consumerism",
    "Trade Policy",
    "Global Economy",
    "National Debt",
    "Stock Market",
    "Cryptocurrency Regulations",
    "Social Welfare",
    "Taxation",
    "Healthcare Policy",
    "Public Health",
    "Mental Health Care",
    "Reproductive Rights",
    "Access to Healthcare",
    "Alternative Medicine",
    "Food Safety",
    "Drug Policy",
    "Climate Policy",
    "Renewable Energy Policy",
    "Environmental Conservation",
    "Wildlife Conservation",
    "Gender Equality",
    "LGBTQ+ Rights",
    "Racial Justice",
    "Immigration Policy",
    "Refugee Crisis",
    "Humanitarian Aid",
    "Disaster Response",
    "Peacekeeping",
    "Human Trafficking",
    "Child Labor",
    "Animal Rights",
    "Ethical Consumerism",
    "Volunteerism",
    "Social Entrepreneurship"
]
  i=0
  j=0
  k=0
  count = 0
  start_time = time.time()
  while True:
    if(count>=56):
      k=k+1
      if k>=1: 
        break
      count=0
    if i>=100:
      i=0
      j=j+1
    
    
    prompt = "Write an essay on topic " + topics[j] +"in " + countries[i]+ ". Write the essay in " + words[k]+" words."
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=prompt,
        stop=None,
        n=1,
        max_tokens = 500
    )
    abstract_ai = response.choices[0].text
    writer.writerow([countries[i], topics[j], words[k], abstract_ai])
    i=i+1
    count=count+1
    iteration = iteration+1
    if iteration >= 59:
        # Calculate the elapsed time
      elapsed_time = time.time() - start_time

        # Check if the elapsed time is less than the time limit
      if elapsed_time < 62:
            # Calculate the remaining time to wait
          wait_time = 62 - elapsed_time

            # Print the remaining time to wait
          print("Waiting for", wait_time, "seconds...")

            # Sleep for the remaining time
          time.sleep(wait_time)

            # Reset the iteration counter and start time
          iteration = 0
          start_time = time.time()
      else:
            # Reset the iteration counter and start time
          iteration = 0
          start_time = time.time()
    else:
        # Sleep for a short duration (e.g., 1 second) before the next iteration
      time.sleep(0)
      

      # write the fields as a row to the CSV file

import pandas as pd

df = pd.read_csv("/content/output.csv", header = None)

df.head()

df.shape

